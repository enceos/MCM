PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = WBI_IOWA
module = Part
author = Michael Billard (Angel-125)

// --- asset parameters ---
rescaleFactor = 1

MODEL
{
    model = WildBlueIndustries/MCM/Assets/IOWA
}


// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1
node_stack_back = 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0

// --- editor parameters ---
TechRequired = specializedConstruction
entryCost = 4000
cost = 500
category = Utility
subcategory = 0
title = Inflatable Orbital Workshop Addition
manufacturer = Wild Blue Industries
description = The Inflatable Orbital Workshop Addition (IOWA) provides needed additional workspace for growing orbital colonies with production modules such as refineries, machinery plants, repair shops, and fabricators. It can also serve as living space, though it won't be as cozy as an orbital hab ring. The IOWA is quite compact when deflated and can be stored in any appropriately sized KAS container. It can also be fitted to a module in the VAB/SPH or attached during an EVA.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,0,0,0

// --- standard part parameters ---
mass = 0.25
dragModelType = default
maximum_drag = 0.25
minimum_drag = 0.25
angularDrag = .5
crashTolerance = 45
breakingForce = 280
breakingTorque = 280
maxTemp = 1400
CrewCapacity = 0
vesselType = Base
fuelCrossFeed = True

MODULE
{
    name = FSanimateGeneric
    animationName = IOWALights
    startEventGUIName = Lights On
    endEventGUIName = Lights Off
    toggleActionName = Toggle Lights
    availableInEVA = True
    availableInVessel = True
    EVArange = 5
    layer = 0
    moduleID = 1
    playAnimationOnEditorSpawn = False
}

MODULE
{
    name = SpaceAcademy
}

MODULE
{
    name = MKSModule
    workSpace = 0
    livingSpace = 0
    hasGenerators = false
} 

MODULE
{
    name = MKSExtensionModule
    enableLogging = True

    //Names of the mesh objects that have the Icon_Hidden tag
    objects = InflatableWorkshop;GreenhouseWorkshop

    //Names and index numbers of custom meshes used by specific templates.
    //Format: <template name>,<mesh index>;<template name>,<mesh index>
    //If a template is not listed, then the part's first mesh will be used.
    templateMeshIndexes = Aeroponics,1

    //Determines whether or not the part is inflatable
    isInflatable = True

    //Name of inflatable animation
    animationName = Deploy

    //GUI name of deploy animation
    startEventGUIName = Inflate

    //GUI name of retract animation
    endEventGUIName = Deflate

    //Determines if the module allows in-field reconfiguring
    fieldReconfigurable = True

    //Workspace template for the Space Academy. When selected, the Training Akademy becomes available.
    academyShortName = Akademy

    //Determines whether or not to show the context menu GUI
    //So objects derived from MKSStorageContainer can show their own GUI
    showGUI = True

    //Short name of the default module template.
    //This is used when selecting the part in the editor.
    //User will then right-click on the module to change its type.
    defaultTemplate = Kerbitat

    //name of the template nodes to use
    templateNodes = MKSTEMPLATE

    //The type of template(s) that the module accepts.
    //Don't include this if the part accepts all templates of type templateNodes.
    templateTypes = Extension

    //Base path where all the decals are located
    decalBasePath = WildBlueIndustries/MCM/Decals

    //Name of the logo panel transforms
    logoPanelTransform = logoPanel001, logoPanel002, logoPanel003

    OVERRIDE
    {
      shortName = Kerbitat
      logoPanel = DecalLivingspaceKerbitat
      glowPanel = DecalLivingspaceKerbitatGlow
      livingSpace = 4
    }

    OVERRIDE
    {
      shortName = Fabricator
      logoPanel = DecalWorkspaceFabrication
      glowPanel = DecalWorkspaceFabricationGlow
      workSpace = 4
    }

    OVERRIDE
    {
      shortName = Mobile Refinery
      logoPanel = DecalWorkspaceRefinery
      glowPanel = DecalWorkspaceRefineryGlow
      workSpace = 4
    }

    OVERRIDE
    {
      shortName = Fuel Refinery
      logoPanel = DecalWorkspaceFuelRefinery
      glowPanel = DecalWorkspaceFuelRefineryGlow
      workSpace = 4
    }

    OVERRIDE
    {
      shortName = Repair Shop
      logoPanel = DecalWorkspaceRepair
      glowPanel = DecalWorkspaceRepairGlow
      workSpace = 4
    }

    OVERRIDE
    {
      shortName = Machinery Plant
      logoPanel = DecalWorkspaceMachinery
      glowPanel = DecalWorkspaceMachineryGlow
      workSpace = 4
    }

    OVERRIDE
    {
      shortName = Aeroponics
      logoPanel = DecalLivingspaceGreenhouse
      glowPanel = DecalLivingspaceGreenhouseGlow
      workSpace = 4
    }

    OVERRIDE
    {
      shortName = Akademy
      logoPanel = DecalLivingspaceAkademy
      glowPanel = DecalLivingspaceAkademyGlow
    }
}

MODULE
{
    name = KASModuleGrab            
    evaPartPos = (0.0, 0.40, 0.00)        
    evaPartDir = (0,0,-1)
    storable = true
    storedSize  = 30
    attachOnPart = true
    attachOnEva = true
    bayType = WBI_IOWACONNECTOR
    bayNode = back
    bayRot = (0.0, 0.0, 0.0)
    stateless = true
}

}
