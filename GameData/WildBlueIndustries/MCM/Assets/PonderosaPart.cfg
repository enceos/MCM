PART
{
// --- general parameters ---
name = WBI_Ponderosa
module = Part
author = Angel-125

MODEL
{
    model = WildBlueIndustries/MCM/Assets/Ponderosa
}
rescaleFactor = 1

// --- node definitions ---
node_stack_bottom = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0
	
// --- editor parameters ---
cost = 50000
category = Utility
subcategory = 0
title = Ponderosa Advanced Colony Module
manufacturer = Wild Blue Industries
description = The top of the line in Wild Blue Industries' colonization products, the Ponderosa Advanced Colony Module (ACM) is a "space tent" that can be carried on the back of a "space camping" kerbal to a desired location, and then deployed to form a colony module. Just add machinery. It even fits standard KAS container mounting racks.

TechRequired = metaMaterials
entryCost = 22500

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,0,1
    
mass = 1.25
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.3
angularDrag = 2
crashTolerance = 20
maxTemp = 1400
fuelCrossFeed = False
breakingForce = 65
breakingTorque = 65
CrewCapacity = 4

INTERNAL
{
    name = crewCabinInternals
}

MODULE
{
    name = MKSModuleController
    enableLogging = True

    //Determines whether or not to show the context menu GUI
    //So objects derived from MKSStorageContainer can show their own GUI
    showGUI = True

    //If the part has a KAS container, this is the base amount
    baseKasAmount = 40

    //name of the template nodes to use
    templateNodes = MKSTEMPLATE

    //Template types that the multipurpose module accepts. Leave blank for all of them.
    templateTypes = Kolony

    //Determines whether or not the part is inflatable
    isInflatable = True

    //Name of inflatable animation
    animationName = Deploy

    //GUI name of deploy animation
    startEventGUIName = Inflate

    //GUI name of retract animation
    endEventGUIName = Deflate

    //Crew capacity when inflated
    inflatedCrewCapacity = 4

    //Determines if the part can be reconfigured out in the field.
    fieldReconfigurable = true

    //If the part is field reconfigurable, this field specifies what tech node is required before the part can be reconfigured.
    //Leave blank if the part can be reconfigured without restrictions.
    techRequiredToReconfigure = composites

    //Short name of the default module template.
    //This is used when selecting the part in the editor.
    //User will then right-click on the module to change its type.
    defaultTemplate = Basic Module

    //Names of the MKS resources
    //Kludge, but I need to know what resources to zero out when switching module types.
    //Why? Because modules like TAC will add resources and we don't want to zero out those.
    //Ideally the KolonyConverter itself would know what the total possible resources that it can use are, and zero them out.
    resourcesToReplace = BioMass;EnrichedUranium;DepletedUranium;PunchCards;Machinery;StructuralParts;MechanicalParts;ElectronicParts;Recyclables;ExoticMinerals;RareMetals;Chemicals;Polymers;Compost

    //Ignore these modules when loading modules from a template
    ignoreTemplateModules = KolonyConverter;MKSModule;MKSModuleSwitcher;MKSStorageContainer;OrbitalLogistics;ProxyLogistics;ExWorkshop

    //Path to the decals used when displaying the module info panel.
    infoDecalsPath = WildBlueIndustries/MCM/Decals

    //Base path where all the decals are located
    decalBasePath = WildBlueIndustries/MCM/Decals

    //Name of the logo panel transforms
    logoPanelTransform = logoPanel001, logoPanel002, logoPanel003

    //The OVERRIDE config node is used to determine the names of the logo panels and glow panels and provide overrides to various template parameters.
    //MKSModuleController uses the short name, which is also used in the template file, to determine what decals to use where.
    //Since different models and parts can use different decals, we specify the name of the decal to use for the logo and the glow panel here.
    OVERRIDE
    {
      shortName = Basic Module
      logoPanel = ACMDecal
      glowPanel = ACMDecalGlow
      infoDecal = ACMDecal
    }

    OVERRIDE
    {
      shortName = Colony Hub
      logoPanel = Decal00
      glowPanel = Decal00Glow
      infoDecal = Decal00
    }

    OVERRIDE
    {
      shortName = PDU
      logoPanel = Decal02
      glowPanel = Decal02Glow
      infoDecal = Decal02
    }

    OVERRIDE
    {
      shortName = Machinery Plant
      logoPanel = Decal03
      glowPanel = Decal03Glow
      infoDecal = Decal03
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Repair Shop
      logoPanel = Decal04
      glowPanel = Decal04Glow
      infoDecal = Decal04
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = BioLab
      logoPanel = Decal06
      glowPanel = Decal06Glow
      infoDecal = Decal06
      efficiencyPart = MKS_AgModule,WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Aeroponics
      logoPanel = Decal07
      glowPanel = Decal07Glow
      infoDecal = Decal07
      efficiencyPart = MKS_AgModule,OKS_AgModule,inflato1,WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Kerbitat(tm)
      logoPanel = Decal08
      glowPanel = Decal08Glow
      infoDecal = Decal08
      efficiencyPart = MKS_HabDome,OKS_HabRing,WBI_IMEM,WBI_IOWA,centrifuge1
    }

    OVERRIDE
    {
      shortName = Mobile Refinery
      logoPanel = Decal09
      glowPanel = Decal09Glow
      infoDecal = Decal09
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Fabricator
      logoPanel = Decal10
      glowPanel = Decal10Glow
      infoDecal = Decal10
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Science Lab
      logoPanel = Decal13
      glowPanel = Decal13Glow
      infoDecal = Decal13
    }

    OVERRIDE
    {
      shortName = Fuel Refinery
      logoPanel = Decal14
      glowPanel = Decal14Glow
      infoDecal = Decal14
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Workspace Module
      logoPanel = Decal99
      glowPanel = Decal99Glow
      infoDecal = Decal99
    }
}

MODULE
{
    name = ModuleCommand
    minimumCrew = 0
}

MODULE
{
    name = USI_BaseAnchor
    anchorWeight = 25
    offset = -1
}

MODULE
{
    name = USI_InertialDampener
    dampenSpeed = 0.003
    dampenFactor = 0
    engageSpeed = 1
}

MODULE
{
    name = ModuleLight
    lightName = DoorLight2
    useAnimationDim = true           	//use BrightenSpeed and DimSpeed settings.
    lightBrightenSpeed = 2.5  
    lightDimSpeed = 2.5
    resourceAmount = 0.04          		//amount of EC consumed per second
    animationName = ACMLights		//Emissive animation
    useResources = true               	// set to false of you don't want light to consume EC
}

MODULE
{
    name = MKSEfficiencyModule
    workSpace = 1
    livingSpace = 0
}

MODULE
{
    name = ExWorkshop
    ProductivityFactor  = 1
}

MODULE
{
    name = FlagDecal
    textureQuadName = flagTransform
}

MODULE
{
    name = ModuleConnectedLivingSpace
    passable = true
}

MODULE
{
    name = KASModuleContainer
    maxSize = 40
}

MODULE
{
    name = KASModuleGrab
    evaPartPos = (0.0, 0.10, -0.15)
    evaPartDir = (0,0,-1)
    attachNodeName = bottom
    attachOnStatic = True
    customGroundPos = true
    dropPartPos = (0.0, -0.1, -0.75)
    dropPartRot = (-10.0, 0.0, 0.0)
    bayType = containerB
    bayNode = bottom
    bayRot = (0.0, 0.0, 0.0)
    storedSize = 90
}

}
