PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = WBI_IMEM
module = Part
author = Michael Billard (Angel-125)

// --- asset parameters ---
rescaleFactor = 1

MODEL
{
    model = WildBlueIndustries/MCM/Assets/IMEM
}


// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1

// --- editor parameters ---
TechRequired = composites
entryCost = 4000
cost = 500
category = Utility
subcategory = 0
title = Inflatable Multipurpose Extension Module
manufacturer = Wild Blue Industries
description = The Inflatable Multipurpose Extension Module (IMEM) is like adding an extension to your house- complete with questionable contractors. It offers additional workspace or living space depending upon how the IMEM is configured. It can support up to 8 kerbals.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,0,0,0

// --- standard part parameters ---
mass = 0.25
dragModelType = default
maximum_drag = 0.25
minimum_drag = 0.25
angularDrag = .5
crashTolerance = 45
breakingForce = 280
breakingTorque = 280
maxTemp = 3400
CrewCapacity = 0
vesselType = Base
fuelCrossFeed = True

MODULE
{
    name = FSanimateGeneric
    animationName = IMEMLights
    startEventGUIName = Lights On
    endEventGUIName = Lights Off
    toggleActionName = Toggle Lights
    availableInEVA = True
    availableInVessel = True
    EVArange = 5
    layer = 0
    moduleID = 1
    playAnimationOnEditorSpawn = False
}

MODULE
{
    name = MKSModule
    workSpace = 0
    livingSpace = 0
    hasGenerators = false
} 

MODULE
{
    name = MKSExtensionModule
    enableLogging = True

    //Determines whether or not the part is inflatable
    isInflatable = True

    //Name of inflatable animation
    animationName = Deploy

    //GUI name of deploy animation
    startEventGUIName = Inflate

    //GUI name of retract animation
    endEventGUIName = Deflate

    //Determines if the module allows in-field reconfiguring
    fieldReconfigurable = True

    //Determines whether or not to show the context menu GUI
    //So objects derived from MKSStorageContainer can show their own GUI
    showGUI = True

    //Short name of the default module template.
    //This is used when selecting the part in the editor.
    //User will then right-click on the module to change its type.
    defaultTemplate = Workspace

    //name of the template nodes to use
    templateNodes = MKSTEMPLATE

    //The type of template(s) that the module accepts.
    //Don't include this if the part accepts all templates of type templateNodes.
    templateTypes = Extension

    //Base path where all the decals are located
    decalBasePath = WildBlueIndustries/MCM/Decals

    //Name of the logo panel transforms
    logoPanelTransform = logoPanel001, logoPanel002, logoPanel003

    OVERRIDE
    {
      shortName = Workspace
      logoPanel = DecalWorkspace
      glowPanel = DecalWorkspaceGlow
    }

    OVERRIDE
    {
      shortName = Livingspace
      logoPanel = DecalLivingspace
      glowPanel = DecalLivingspaceGlow
    }
}

MODULE
{
    name = KASModuleGrab            
    evaPartPos = (0.0, 0.40, 0.00)        
    evaPartDir = (0,0,-1)
    storable = true
    storedSize  = 30
    attachOnPart = true
    attachOnEva = true
}

}
