//Rescales Homestead to fit in the Super25 payload bay
@PART[WBI_Homestead]:FOR[KSO]:Final
{
    @rescaleFactor = 0.99
}

//Turns the cupola into an MKS command module
@PART[KSO_Observation]:FOR[KSO]:Final
{
  MODULE
  {
	    name = ExSurveyStation
  }
  MODULE
  {
      name = USI_ModuleFieldRepair
  }
  MODULE
  {
      name = KolonyConverter
      ConverterName = Command
      StartActionName = Start Command
      StopActionName = Stop Command
      RecipeInputs = ElectricCharge, 3,SpareParts,0.000000425
      RecipeOutputs = PunchCards, 0.02125, False,Recyclables,0.000000425,true
      RequiredResources = 
  }
RESOURCE
{
name = PunchCards
amount = 500
maxAmount = 500
isTweakable = True
}
RESOURCE
{
name = SpareParts
amount = 5
maxAmount = 5
isTweakable = True
}
  RESOURCE
  {
      name = ElectricCharge
      amount = 10000
      maxAmount = 10000
      isTweakable = false
  }
  MODULE
  {
      name = MKSModule
      workSpace = 1
      livingSpace = 0
  }
  MODULE
  {
      name = ModuleConnectedLivingSpace
      passable = true
      impassablenodes = bottom
  }
  MODULE
  {
      name = ExWorkshop
      ProductivityFactor  = 1
  }
}

//Turns the power module into an MKS PDU
@PART[sspowerkso]:FOR[KSO]:Final
{
  MODULE
  {
      name = KolonyConverter
      ConverterName = PDU
      StartActionName = Start PDU
      StopActionName = Stop PDU
      RecipeInputs = EnrichedUranium, 0.0000075
      RecipeOutputs = DepletedUranium, 0.0000075, True, ElectricCharge, 1500, False
      RequiredResources = 
  }
RESOURCE
{
name = EnrichedUranium
amount = 250
maxAmount = 250
isTweakable = True
}
RESOURCE
{
name = DepletedUranium
amount = 0
maxAmount = 250
isTweakable = True
}
  RESOURCE
  {
      name = ElectricCharge
      amount = 120000
      maxAmount = 120000
      isTweakable = false
  }
  MODULE
  {
      name = MKSModule
      workSpace = 1
      livingSpace = 0
  }
  MODULE
  {
      name = ModuleConnectedLivingSpace
      passable = true
      impassablenodes = bottom
  }
  MODULE
  {
      name = ExWorkshop
      ProductivityFactor  = 1
  }
}

//Enables the KerbaLab to become a Multipurpose Colony Module
@PART[KSO_KerbaLab]:FOR[KSO]:Final
{
MODULE
{
    name = MKSModuleController
    enableLogging = True

    //Determines whether or not to show the context menu GUI
    //So objects derived from MKSStorageContainer can show their own GUI
    showGUI = True

    //If the part has a KAS container, this is the base amount
    baseKasAmount = 40

    //name of the template nodes to use
    templateNodes = MKSTEMPLATE

    //Template types that the multipurpose module accepts. Leave blank for all of them.
    templateTypes = Kolony

    //Determines if the part can be reconfigured out in the field.
    fieldReconfigurable = true

    //If the part is field reconfigurable, this field specifies what tech node is required before the part can be reconfigured.
    //Leave blank if the part can be reconfigured without restrictions.
    techRequiredToReconfigure = composites

    //Short name of the default module template.
    //This is used when selecting the part in the editor.
    //User will then right-click on the module to change its type.
    defaultTemplate = Basic Module

    //Names of the MKS resources
    //Kludge, but I need to know what resources to zero out when switching module types.
    //Why? Because modules like TAC will add resources and we don't want to zero out those.
    //Ideally the KolonyConverter itself would know what the total possible resources that it can use are, and zero them out.
    resourcesToReplace = BioMass;EnrichedUranium;DepletedUranium;PunchCards;Machinery;StructuralParts;MechanicalParts;ElectronicParts;Recyclables;ExoticMinerals;RareMetals;Chemicals;Polymers;Compost

    //Ignore these modules when loading modules from a template
    ignoreTemplateModules = KolonyConverter;MKSModule;MKSModuleSwitcher;MKSStorageContainer;OrbitalLogistics;ProxyLogistics;ExWorkshop

    //Name of animation for floodlights (MCM specific)
    floodlightsAnim = Floodlights

    //Name of mesh with no floodlights (MCM specific)
    noFloodlightsMesh = BodyClean2

    //Path to the decals used when displaying the module info panel.
    infoDecalsPath = WildBlueIndustries/MCM/Decals

    //Base path where all the decals are located
    decalBasePath = WildBlueIndustries/MCM/Decals

    //Name of the logo panel transforms
    logoPanelTransform = logoPanel001, logoPanel002, logoPanel003, logoPanel004, logoPanel005

    //The OVERRIDE config node is used to determine the names of the logo panels and glow panels and provide overrides to various template parameters.
    //MKSModuleController uses the short name, which is also used in the template file, to determine what decals to use where.
    //Since different models and parts can use different decals, we specify the name of the decal to use for the logo and the glow panel here.
    OVERRIDE
    {
      shortName = Basic Module
      logoPanel = BasicDecal
      glowPanel = BasicDecalGlow
      infoDecal = BasicDecal
    }

    OVERRIDE
    {
      shortName = Colony Hub
      logoPanel = Decal00
      glowPanel = Decal00Glow
      infoDecal = Decal00
    }

    OVERRIDE
    {
      shortName = PDU
      logoPanel = Decal02
      glowPanel = Decal02Glow
      infoDecal = Decal02
    }

    OVERRIDE
    {
      shortName = Machinery Plant
      logoPanel = Decal03
      glowPanel = Decal03Glow
      infoDecal = Decal03
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Repair Shop
      logoPanel = Decal04
      glowPanel = Decal04Glow
      infoDecal = Decal04
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = BioLab
      logoPanel = Decal06
      glowPanel = Decal06Glow
      infoDecal = Decal06
      efficiencyPart = MKS_AgModule,WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Aeroponics
      logoPanel = Decal07
      glowPanel = Decal07Glow
      infoDecal = Decal07
      efficiencyPart = MKS_AgModule,OKS_AgModule,inflato1,WBI_IMEM,WBI_IOWA,KSO_Hydroponics
    }

    OVERRIDE
    {
      shortName = Kerbitat(tm)
      logoPanel = Decal08
      glowPanel = Decal08Glow
      infoDecal = Decal08
      efficiencyPart = MKS_HabDome,OKS_HabRing,WBI_IMEM,WBI_IOWA,centrifuge1,KSO_Habitat
    }

    OVERRIDE
    {
      shortName = Mobile Refinery
      logoPanel = Decal09
      glowPanel = Decal09Glow
      infoDecal = Decal09
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Fabricator
      logoPanel = Decal10
      glowPanel = Decal10Glow
      infoDecal = Decal10
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Science Lab
      logoPanel = Decal13
      glowPanel = Decal13Glow
      infoDecal = Decal13
    }

    OVERRIDE
    {
      shortName = Fuel Refinery
      logoPanel = Decal14
      glowPanel = Decal14Glow
      infoDecal = Decal14
      efficiencyPart = WBI_IMEM,WBI_IOWA
    }

    OVERRIDE
    {
      shortName = Workspace Module
      logoPanel = Decal99
      glowPanel = Decal99Glow
      infoDecal = Decal99
    }
}

MODULE
{
    name = KASModuleContainer
    maxOpenDistance  = 4
    maxSize = 40
    sndStorePath = KAS/Sounds/hookBayStore
    sndOpenPath = KAS/Sounds/containerOpen
    sndClosePath = KAS/Sounds/containerClose
    bipWrongSndPath = KAS/Sounds/bipwrong
}
MODULE
{
    name = MKSEfficiencyModule
    workSpace = 1
    livingSpace = 0
}

MODULE
{
    name = ExWorkshop
    ProductivityFactor  = 1
}
}

//Enables the habitat to become an efficiency part for the Kerbitat.
@PART[KSO_Habitat]:FOR[KSO]:Final
{
MODULE
{
    name = MKSModule
    workSpace = 1
    livingSpace = 4
}
}

//Enables the hydroponics module to become an efficiency part for Aeroponics.
@PART[KSO_Hydroponics]:FOR[KSO]:Final
{
MODULE
{
    name = MKSModule
    workSpace = 1
    livingSpace = 4
}
}