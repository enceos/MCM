PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = WBI_MBU
module = Part
author = Michael Billard (Angel-125)

// --- asset parameters ---
rescaleFactor = 1

MODEL
{
	model = WildBlueIndustries/MCM/MultiModule/MBU
}


// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_top = 0.0, 1.052, 0.0, 0.0, 1.0, 0.0, 2
node_stack_bottom = 0.0, -0.952, 0.0, 0.0, 1.0, 0.0, 2
//node_stack_front = 0.0, -0.75, -0.9, 0.0, 0.0, 1.0
//node_stack_rear = 0.0, -0.75, 0.9, 0.0, 0.0, 1.0

// --- editor parameters ---
TechRequired = specializedConstruction
entryCost = 8000
cost = 25000
category = Utility
subcategory = 0
title = Multipurpose Base Unit
manufacturer = Wild Blue Industries
description = A complement to the Multipurpose Colony Module (MCM), the Multipurpose Base Unit (MBU) provides ground support for the MCM. In addition to solid footing, it has a configurable storage area for supplies. The MBU is conveniently shaped to fit within 2.5-meter standard payload shrouds.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,1,1,1

// --- standard part parameters ---
mass = 1.25
dragModelType = default
maximum_drag = 0.25
minimum_drag = 0.25
angularDrag = .5
crashTolerance = 45
breakingForce = 280
breakingTorque = 280
maxTemp = 3400
CrewCapacity = 0
vesselType = Base

MODULE
{
	name = FSanimateGeneric
	animationName = ExtendLegs
	startEventGUIName = Retract Legs
	endEventGUIName = Extend Legs
	toggleActionName = Toggle Legs
        startDeployed = True
}

MODULE
{
    name = MKSStorageController
    enableLogging = True

    //Determines whether or not to show the context menu GUI
    //So objects derived from MKSStorageContainer can show their own GUI
    showGUI = True

    //Short name of the default module template.
    //This is used when selecting the part in the editor.
    //User will then right-click on the module to change its type.
    defaultTemplate = Basic MBU

    //name of the template nodes to use
    templateNodes = MKSSTORAGE

    //List of all the resources that may be replaced during a template switch. Any resource NOT
    //on the list will be preserved.
    //If empty, then all of the part's resources will be cleared during a template switch.
    //Set to ALL if you want all of the part's resources to be cleared during a template switch.
    //This exists because mods like TAC-LS like to add resources to parts and we won't know about them at runtime.
    resourcesToReplace = ALL

    //Some containers don't hold as much resources as the template specifies, while others hold more.
    //Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
    //factor into the resource amounts.
    capacityFactor = 0.35

    //Base path where all the decals are located
    decalBasePath = WildBlueIndustries/MCM/Decals

    //Name of the logo panel transforms
    logoPanelTransform = logoPanel001, logoPanel002, logoPanel003, logoPanel004

    //The DECAL config node is used to determine the names of the logo panels and glow panels.
    //MKSStorageController uses the short name, which is also used in the template file, to determine what decals to use where.
    //Since different models and parts can use different decals, we specify the name of the decal to use for the logo and the glow panel here.
    DECAL
    {
      shortName = Basic MBU
      logoPanel = MBUDecal
      glowPanel = MBUDecalGlow
    }

    DECAL
    {
      shortName = Pioneer
      logoPanel = Decal42
      glowPanel = Decal42Glow
    }

    DECAL
    {
      shortName = Rocket Parts
      logoPanel = Decal45
      glowPanel = Decal45Glow
    }

    DECAL
    {
      shortName = Life Support
      logoPanel = Decal51
      glowPanel = Decal51Glow
    }

    DECAL
    {
      shortName = Mining
      logoPanel = Decal52
      glowPanel = Decal52Glow
    }

    DECAL
    {
      shortName = Refining
      logoPanel = Decal54
      glowPanel = Decal54Glow
    }

    DECAL
    {
      shortName = Equipment
      logoPanel = Decal55
      glowPanel = Decal55Glow
    }

    DECAL
    {
      shortName = Fabrication
      logoPanel = Decal56
      glowPanel = Decal56Glow
    }

    DECAL
    {
      shortName = Refueling
      logoPanel = Decal57
      glowPanel = Decal57Glow
    }
}

MODULE
{
    name = USI_BaseAnchor
    anchorWeight = 25
    offset = -1
}

MODULE
{
    name = USI_InertialDampener
    dampenSpeed = 0.003
    dampenFactor = 0
    engageSpeed = 1
}

MODULE
{
    name = ModuleConnectedLivingSpace
    passable = true
    passableWhenSurfaceAttached = true
    impassablenodes = bottom
    surfaceAttachmentsPassable = true
}

RESOURCE
{
      name = ElectricCharge
      amount = 400
      maxAmount = 400
      isTweakable = false
}

MODULE
{
    name = KASModuleContainer
    maxOpenDistance  = 4
    maxSize = 80
    sndStorePath = KAS/Sounds/hookBayStore
    sndOpenPath = KAS/Sounds/containerOpen
    sndClosePath = KAS/Sounds/containerClose
    bipWrongSndPath = KAS/Sounds/bipwrong
}

}
